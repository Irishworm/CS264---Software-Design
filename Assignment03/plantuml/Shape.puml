@startuml
abstract class Shape {
    + name : string <<get>> <<set>>
    + strokeWidth : int <<get>> <<set>>
    + stroke : string <<get>> <<set>>
    + fill : string <<get>> <<set>>
    + <<virtual>> getCode() : string
}
class Rectangle {
    + x : int <<get>> <<set>>
    + y : int <<get>> <<set>>
    + w : int <<get>> <<set>>
    + h : int <<get>> <<set>>
    + Rectangle(x:int, y:int, w:int, h:int)
    + <<override>> getCode() : string
}
class Circle {
    + cx : int <<get>> <<set>>
    + cy : int <<get>> <<set>>
    + rad : int <<get>> <<set>>
    + Circle(x:int, y:int, r:int)
    + <<override>> getCode() : string
}
class Ellipse {
    + cx : int <<get>> <<set>>
    + cy : int <<get>> <<set>>
    + rx : int <<get>> <<set>>
    + ry : int <<get>> <<set>>
    + Ellipse(x:int, y:int, r1:int, r2:int)
    + <<override>> getCode() : string
}
class Line {
    + x1 : int <<get>> <<set>>
    + y1 : int <<get>> <<set>>
    + x2 : int <<get>> <<set>>
    + y2 : int <<get>> <<set>>
    + Line(x:int, y:int, a:int, b:int)
    + <<override>> getCode() : string
}
class Polyline {
    + coord : string <<get>> <<set>>
    + Polyline(s:string)
    + <<override>> getCode() : string
}
class Polygon {
    + coord : string <<get>> <<set>>
    + Polygon(s:string)
    + <<override>> getCode() : string
}
class Path {
    + coord : string <<get>> <<set>>
    + Path(s:string)
    + <<override>> getCode() : string
}
Shape <|-- Rectangle
Shape <|-- Circle
Shape <|-- Ellipse
Shape <|-- Line
Shape <|-- Polyline
Shape <|-- Polygon
Shape <|-- Path
@enduml
